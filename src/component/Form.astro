---
import { t, changeLanguage } from "i18next";
import nodemailer from "nodemailer";

changeLanguage("it");

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();

    // Estrarre i dati dal FormData
    const name = formData.get("name");
    const surname = formData.get("surname");
    const email = formData.get("email");
    const phoneNumber = formData.get("phoneNumber");
    const message = formData.get("message");

    console.log("import.meta.env.SMTP_HOST ", import.meta.env.SMTP_HOST);
    console.log("import.meta.env.SMTP_USER ", import.meta.env.SMTP_USER);
    console.log("import.meta.env.SMTP_PASS ", import.meta.env.SMTP_PASS);

    // Configura il trasportatore Nodemailer
    const transporter = nodemailer.createTransport({
      host: import.meta.env.SMTP_HOST,
      port: 25,
      auth: {
        user: import.meta.env.SMTP_USER,
        pass: import.meta.env.SMTP_PASS
      }
    });

    // Configura l'email
    const mailOptions = {
      from: "il.tuo.email@gmail.com",
      to: email,
      subject: "Dettagli del modulo inviato",
      text: `Nome: ${name}\nCognome: ${surname}\nEmail: ${email}\nTelefono: ${phoneNumber}\nMessaggio: ${message}`
    };

    // Invia l'email
    await transporter.sendMail(mailOptions);

    console.log("Email inviata con successo.");

  } catch (error) {
    if (error instanceof Error) {
      console.error("error.message");
      console.error(error.message);
    }
  }
}
---

<form id="contactForm" class="w-full lg:mt-0 mt-[44px]" method="POST">
  <div class="flex flex-col lg:gap-[2.222vw]">
    <div class="flex flex-col lg:flex-row lg:gap-[10.417vw] gap-0">
      <div class="lg:w-1/2 relative">
        <input type="text" name="name" placeholder=" " required />
        <label for="name" class="text-grigio-200">{t("contatti.form.nome")}</label>
      </div>
      <div class="lg:w-1/2 relative">
        <input type="text" name="surname" placeholder=" " required />
        <label for="surname" class="text-grigio-200">{t("contatti.form.cognome")}</label>
      </div>
    </div>
    <div class="flex flex-col lg:flex-row lg:gap-[10.417vw] gap-0">
      <div class="lg:w-1/2 relative">
        <input type="email" name="email" placeholder=" " required />
        <label for="email" class="text-grigio-200">{t("contatti.form.email")}</label>
      </div>
      <div class="lg:w-1/2 relative">
        <input type="number" name="phoneNumber" placeholder=" " required />
        <label for="phoneNumber" class="text-grigio-200">{t("contatti.form.telefono")}</label>
      </div>
    </div>
    <div class="flex flex-col lg:flex-row lg:gap-[10.417vw] gap-0">
      <div class="w-full relative">
        <input type="text" name="message" placeholder=" " required />
        <label for="message" class="text-grigio-200">{t("contatti.form.messaggio")}</label>
      </div>
    </div>
    <div class="flex flex-row items-center lg:gap-[0.833vw] gap-[16px]">
      <input type="checkbox" name="privacy" id="privacy" required />
      <p class="text-grigio-200 !opacity-100 !top-0 !translate-x-0 lg:text-[0.83vw] text-[16px]" set:html={t("contatti.form.privacy")} />
    </div>

    <div class="flex flex-col lg:flex-row items-start lg:mt-0 mt-[32px]">
      <button type="submit" class="btn-gen btn-blu">
        <p class="btn-title">
          <span class="text">{t("contatti.form.button")}</span>
          <span class="hover-text">{t("contatti.form.button")}</span>
        </p>
      </button>
    </div>
  </div>
</form>
