---
import { t, changeLanguage } from "i18next";
import nodemailer from "nodemailer";

changeLanguage("it");

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();

    // Estrarre i dati dal FormData
    const name = formData.get("name");
    const surname = formData.get("surname");
    const email = formData.get("email");
    const phoneNumber = formData.get("phoneNumber");
    const message = formData.get("message");

    console.log("import.meta.env.SMTP_HOST ", import.meta.env.SMTP_HOST);
    console.log("import.meta.env.SMTP_USER ", import.meta.env.SMTP_USER);
    console.log("import.meta.env.SMTP_PASS ", import.meta.env.SMTP_PASS);

    // Configura il trasportatore Nodemailer
    const transporter = nodemailer.createTransport({
      host: import.meta.env.SMTP_HOST,
      port: 25,
      auth: {
        user: import.meta.env.SMTP_USER,
        pass: import.meta.env.SMTP_PASS
      }
    });

    // 1. Email a info@celyon.it con i dettagli del form
    await transporter.sendMail({
      from: "il.tuo.email@gmail.com",
      to: "nicolo.bassi@demia.org",
      subject: "Nuovo modulo inviato",
      text: `Dettagli del modulo:\nNome: ${name}\nCognome: ${surname}\nEmail: ${email}\nTelefono: ${phoneNumber}\nMessaggio: ${message}`
    });

    // 2. Email di ringraziamento all'indirizzo dell'utente
    await transporter.sendMail({
      from: "il.tuo.email@gmail.com",
      to: email,
      subject: "Grazie per il tuo messaggio!",
      text: `Ciao ${name},\n\nGrazie per averci contattato! Abbiamo ricevuto il tuo messaggio e ti risponderemo al pi√π presto.\n\nCordiali saluti,\nIl team di Celyon`
    });

    // 3. Email a demiaform@demia.org con solo il nome
    await transporter.sendMail({
      from: "il.tuo.email@gmail.com",
      to: "demiaform@gmail.com",
      subject: "Nuovo contatto ricevuto",
      text: `Nome del contatto: ${name}`
    });

    console.log("Tutte le email inviate con successo.");
  } catch (error) {
    if (error instanceof Error) {
      console.error("Errore nell'invio delle email: ", error.message);
    }
  }
}
---

<form id="contactForm" class="w-full lg:mt-0 mt-[44px]" method="POST">
  <div class="flex flex-col lg:gap-[2.222vw]">
    <div class="flex flex-col lg:flex-row lg:gap-[10.417vw] gap-0">
      <div class="lg:w-1/2 relative">
        <input type="text" name="name" placeholder=" " required />
        <label for="name" class="text-grigio-200">{t("contatti.form.nome")}</label>
      </div>
      <div class="lg:w-1/2 relative">
        <input type="text" name="surname" placeholder=" " required />
        <label for="surname" class="text-grigio-200">{t("contatti.form.cognome")}</label>
      </div>
    </div>
    <div class="flex flex-col lg:flex-row lg:gap-[10.417vw] gap-0">
      <div class="lg:w-1/2 relative">
        <input type="email" name="email" placeholder=" " required />
        <label for="email" class="text-grigio-200">{t("contatti.form.email")}</label>
      </div>
      <div class="lg:w-1/2 relative">
        <input type="number" name="phoneNumber" placeholder=" " required />
        <label for="phoneNumber" class="text-grigio-200">{t("contatti.form.telefono")}</label>
      </div>
    </div>
    <div class="flex flex-col lg:flex-row lg:gap-[10.417vw] gap-0">
      <div class="w-full relative">
        <input type="text" name="message" placeholder=" " required />
        <label for="message" class="text-grigio-200">{t("contatti.form.messaggio")}</label>
      </div>
    </div>
    <div class="flex flex-row items-center lg:gap-[0.833vw] gap-[16px]">
      <input type="checkbox" name="privacy" id="privacy" required />
      <p class="text-grigio-200 !opacity-100 !top-0 !translate-x-0 lg:text-[0.83vw] text-[16px]" set:html={t("contatti.form.privacy")} />
    </div>

    <div class="flex flex-col lg:flex-row items-start lg:mt-0 mt-[32px]">
      <button type="submit" class="btn-gen btn-blu">
        <p class="btn-title">
          <span class="text">{t("contatti.form.button")}</span>
          <span class="hover-text">{t("contatti.form.button")}</span>
        </p>
      </button>
    </div>
  </div>
</form>

<div id="formLoader" class="hidden fixed inset-0 bg-white bg-opacity-80 flex items-center justify-center z-50">
  <div class="loader"></div>
</div>

<div id="formPopup" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
  <div class="popup-content bg-white p-8 rounded-lg text-center shadow-lg">
    <h2 id="popupTitle" class="text-2xl font-bold mb-4 text-blue-600"></h2>
    <p id="popupMessage" class="text-gray-700 mb-6"></p>
    <button id="popupCloseBtn" class="btn-gen btn-blu">OK</button>
  </div>
</div>

<style>
  /* Loader */
  #formLoader.hidden,
  #formPopup.hidden {
    display: none;
  }

  .loader {
    width: 50px;
    height: 50px;
    border: 6px solid #e0e0e0;
    border-top: 6px solid #2d6cdf;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  /* Popup */
  .popup-content {
    max-width: 400px;
    border: 1px solid #ddd;
  }

  #popupCloseBtn {
    padding: 10px 20px;
    background-color: #2d6cdf;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }

  #popupCloseBtn:hover {
    background-color: #245bb5;
  }
</style>
